Score : P | Difficulty Hard(EZ)
You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.

Merge all the linked-lists into one sorted linked-list and return it.

 

Example 1:

Input: lists = [[1,4,5],[1,3,4],[2,6]]
Output: [1,1,2,3,4,4,5,6]
Explanation: The linked-lists are:
[
  1->4->5,
  1->3->4,
  2->6
]
merging them into one sorted list:
1->1->2->3->4->4->5->6
Example 2:

Input: lists = []
Output: []
Example 3:

Input: lists = [[]]
Output: []
 

Constraints:

k == lists.length
0 <= k <= 104
0 <= lists[i].length <= 500
-104 <= lists[i][j] <= 104
lists[i] is sorted in ascending order.
The sum of lists[i].length will not exceed 104.


M's answer :
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        ListNode answer = new ListNode();
        ArrayList<Integer> list = new ArrayList<>();
        for(int i = 0; i < lists.length; i++){
            addToList(lists[i], list);
        }
        Collections.sort(list);
        addToAnswer(list, answer);
        return answer.next;
    }
    public void addToList(ListNode listNodes, ArrayList<Integer> list) {
        while(listNodes != null){
            list.add(listNodes.val);
            listNodes = listNodes.next;
        }
    }
    public void addToAnswer(ArrayList<Integer> list, ListNode answer) {
        for(int node : list){
            answer.next = new ListNode(node);
            answer = answer.next;
        }
    }
}
